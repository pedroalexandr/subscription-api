version: "3.7"

networks:
  db-network:
  smtp-server-network:
  app-network:
  public-network:
  queue-network:

services:
  public-service:
    container_name: public-service
    image: nginx:1.13
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - public-network
    depends_on:
      - subscription-service

  subscription-service:
    container_name: subscription-service
    build:
      context: .
    networks:
      - public-network
      - app-network
      - smtp-server-network
      - db-network
      - queue-network
    depends_on:
      - db-service
      - smtp-server
      - email-service-worker
      - queue-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-service:5432/subscriptions_api
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  db-service:
    container_name: db-service
    image: postgres:13.1-alpine
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db-network

  smtp-server:
    container_name: smtp-server
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - "8025:8025"
    networks:
      - smtp-server-network

  email-service-worker:
    build:
      context: email-service
    volumes:
      - ./email-service:/email-service
    working_dir: /email-service
    command:
      - email-service.py
    networks:
      - queue-network
      - smtp-server-network
    depends_on:
      - smtp-server
      - queue-service

  queue-service:
    container_name: queue-service
    image: redis:3.2
    networks:
      - queue-network